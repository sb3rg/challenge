{
    "collab_server" : "",
    "contents" : "source( \"D:\\\\helpers.R\" )\n# install.packages( \"DiagrammeR\" )\n# install.packages( \"DiagrammeRsvg\" )\n# install.packages( \"htmltools\" )\n# install.packages(\"extrafont\")\n# install.packages(\"ggridges\")\n\n# library( DiagrammeR )\n# library( DiagrammeRsvg )\n# library( htmltools )\nlibrary(scales)\nlibrary(extrafont)\n# font_import()\n# loadfonts(\"win\")\n# fonts()\nlibrary(RColorBrewer)\nlibrary(grid)    # for pmax\n# library(gridExtra) # to arrange the plots\n# library(ggridges) # for ridge plots\nlibrary(dplyr)\n\n\n## --- IMPORT AND COMBINE DATA ---\nraw <- read.csv(\"Data.csv\", stringsAsFactors = F)\ncopy <- raw %>% copy() %>% as.data.table()\n\n# raw <- read.csv(\"2019-10-17 from_to_table.csv\", stringsAsFactors = F)\n# copy <- raw %>% copy() %>% as.data.table()\n\n\n\n### --- VISUALIZE LOS --- ###\nmelted <- melt(copy, measure.vars = c(\n  # \"Waiting.for.ED\",\n  # \"Waiting.for.UC\",\n  # \"Radiology.Ordered\",\n  # \"Radiology.Resulted\"\n  # \"Arrival.Date...Time\",\n  \"Rooming.Date...Time\",\n  # \"Provider.Assigned\",\n  \"Ready.for.Discharge\"\n  # \"EKG.Ordered\",\n  # \"EKG.Completed\"\n)\n)[!is.na(value)]\n\nexclude <- c(\n  \"Waiting.for.ED\",\n  \"Waiting.for.UC\",\n  \"Radiology.Ordered\",\n  \"Radiology.Resulted\",\n  \"Arrival.Date...Time\",\n  \"Provider.Assigned\",\n  \"EKG.Ordered\",\n  \"EKG.Completed\"\n)\n\n\nmelted <- melted %>%\n  select(-exclude)\n  \n\n\n#sub-index by\nkeycols <- c( \"Patient.Identifier\" )\nsetkeyv( melted, keycols )\nfrom_to <- melted[order(Patient.Identifier, value)] %>% copy() %>%\n  # add new column that adds sub-index\n  (function(x) x[, ':=' ( subid, .SD[, j = list( .I )] ), keyby = keycols ]) %>%\n  # rename \"variable\" to \"from\" and remove\n  (function(x) x[, \":=\" ( from = as.character( variable ), from_value = value, variable = NULL, value = NULL )]) %>%\n  # create a new column that contains 1 position shifts (upwards) of time stamp keys\n  (function(x) x[, \":=\" ( to = c( tail( from, -1 ), head( from, 1 ))), by = keycols ]) %>%\n  # create a new column that contains 1 position shifts (upwards) of time stamp values\n  (function(x) x[, \":=\" ( to_value = c( tail( from_value, -1 ), head( from_value, 1 ))), by = keycols ]) %>%\n  # remove last item to eliminate equivalent records (THIS CAN BE REMOVED)\n  (function(x) x[, ':=' ( maxID, .SD[, j = list( max( subid ) )]), keyby = keycols ][ subid != maxID ]) %>%\n  # calculate durations\n  (function(x) x[, \":=\" ( duration = ( to_value - from_value ) * 24 * 60, maxID = NULL ) ]) %>%\n  # create a new column that contains concatenated start-stop character pairs\n  (function(x) x[, \":=\" ( from_to = paste( from, to, sep = \" --> \" )), by = keycols ])\n\n\nfrom_to %>% \n  my_export(\"hourly study\", \"./\")\n\n\n\n\n#collate descriptive stats for annotations\nupper_limit <- 240\nbin_size <- 10\nfiltered_data <- from_to[duration < upper_limit & !(Triage.Acuity %in% c(\"\",\"1 (Resuscitation)\"))] %>%\n  # Add date properties\n  (function(x) x$from_value %>% add_date_prop_DT() %>% cbind(x)) %>%\n  # Filter only peaks season: Nov - Mar\n  (function(x) x[month >=11 | month <= 3]) %>%\n  # Filter Sat-Mon\n  (function(x) x[wday %in% c(6,7,1)]) %>%\n  # Filter 4 - 9 pm\n  (function(x) x[hour >= 16 ])\n\nstats <- filtered_data[,.(mean=mean(duration), median=median(duration), N=.N), by=Triage.Acuity]\noverall <- filtered_data[,.(mean=mean(duration), median=median(duration), N=.N)]\n\n\n## -- LOS ROOM TO DISCHARGE\nfiltered_data %>%\n  ## STAT GRAPHICS\n  ggplot(aes(x=duration, y = ..count../sum(..count..), fill=Triage.Acuity))+ #base graph with x and y specified\n  stat_bin(binwidth=bin_size, colour=\"white\", fill = \"#FDB913\")+ #layer bar graph\n  ## TITLES & AXES\n  labs( # draw labels\n    title=\"Arrival to Room\",#\"EKG Ordered to Complete\",#\"Room to Ready for Discharge\", \n    subtitle = \"1 Jan 2018 to 31 Dec 2018\",\n    y = \"Relative Frequency\",\n    x = \"Duration (mins)\"\n  )+\n  ## SCALES\n  scale_x_continuous(breaks=seq(0, upper_limit, bin_size))+ #scale x axis from 0 to 23 with intervals of 1\n  scale_y_continuous(labels=scales::percent_format(accuracy=1))+ #set y axis to percent\n  ## ANNOTATIONS\n  geom_text(data=overall, x=upper_limit-bin_size, y=0, vjust=-30.5, family=\"Segoe UI Light\", aes(label=paste0(\"N = \", N)), inherit.aes=F)+#add N values to each facet (must include inherit.aes=F)\n  geom_vline(data=overall, color=\"#525354\", linetype=\"dashed\", aes(xintercept=mean))+#add vertical lines at each mean value\n  geom_text(data=overall, y=0, vjust=-30.5, family=\"Segoe UI Light\", aes(x=mean+20, label=paste0(\"Mean = \", round(mean, 1))), inherit.aes=F)+#add mean to each facet (must include inherit.aes=F)\n  geom_vline(data=overall, color=\"#525354\", linetype=\"dashed\", aes(xintercept=median))+#add vertical lines at each median value\n  geom_text(data=overall, y=0, vjust=-30.5, family=\"Segoe UI Light\", aes(x=median-20, label=paste0(round(median, 1), \" = Med\")), inherit.aes=F)+#add median to each facet (must include inherit.aes=F)\n  ## THEMES\n  theme_classic()+ #clean theme\n  theme(text=element_text(family=\"Segoe UI Light\"))\n\n## SAVE\nggsave(path=\"./plots\", filename=\"los_rm_disch_dist_peak.png\", height = 4.78, width = 8.75, units = \"in\", device = \"png\" )\n# ggsave(path=\"./plots\", filename=\"los_rm_disch_dist.png\", height = 4.78, width = 8.75, units = \"in\", device = \"png\" )\n\n\n## -- LOS ROOM TO DISCHARGE BY ESI\nfrom_to[duration < upper_limit & !(Triage.Acuity %in% c(\"\",\"1 (Resuscitation)\"))] %>%\n  ## STAT GRAPHICS\n  ggplot(aes(x=duration, y = ..count../sum(..count..), fill=Triage.Acuity))+ #base graph with x and y specified\n  stat_bin(binwidth=bin_size, colour=\"white\")+#, fill = \"#FDB913\")+ #layer bar graph\n  facet_grid(Triage.Acuity~., scales=\"free_y\")+\n  ## TITLES & AXES\n  labs( # draw labels\n    title=\"Rad Ordered to Complete\",#\"Room to Ready for Discharge\", \n    subtitle = \"1 Jan 2018 to 31 Dec 2018\",\n    y = \"Relative Frequency\",\n    x = \"Duration (mins)\"\n  )+\n  ## SCALES\n  scale_x_continuous(breaks=seq(0, upper_limit, bin_size))+ #scale x axis from 0 to 23 with intervals of 1\n  scale_y_continuous(labels=scales::percent_format(accuracy=1))+ #set y axis to percent\n  scale_fill_brewer(palette=\"RdYlGn\")+ #set palette for fill\n  ## ANNOTATIONS\n  geom_text(data=stats, x=upper_limit-bin_size-5, y=0, vjust=-10, family=\"Segoe UI Light\", aes(label=paste0(\"N = \", N)), inherit.aes=F)+#add N values to each facet (must include inherit.aes=F)\n  geom_vline(data=stats, color=\"#525354\", linetype=\"dashed\", aes(xintercept=mean))+#add vertical lines at each mean value\n  geom_text(data=stats, y=0, vjust=-10, family=\"Segoe UI Light\", aes(x=mean+20, label=paste0(\"Mean = \", round(mean, 1))), inherit.aes=F)+#add mean to each facet (must include inherit.aes=F)\n  geom_vline(data=stats, color=\"#525354\", linetype=\"dashed\", aes(xintercept=median))+#add vertical lines at each median value\n  geom_text(data=stats, y=0, vjust=-10, family=\"Segoe UI Light\", aes(x=median-20, label=paste0(round(median, 1), \" = Med\")), inherit.aes=F)+#add median to each facet (must include inherit.aes=F)\n  ## THEMES\n  theme_classic()+ #clean theme\n  theme(text=element_text(family=\"Segoe UI Light\"))\n\n\n## SAVE\nggsave(path=\"./plots\", filename=\"los_rad_dist_by_acuity.png\", height = 6.56, width = 8.75, units = \"in\", device = \"png\" )\n\n\n\n\n\n#collate descriptive stats for annotations\nupper_limit <- 45\nbin_size <- 1\nfiltered_data <- from_to[duration < upper_limit & Triage.Acuity != \"\"] %>%\n  # Add date properties\n  (function(x) x$from_value %>% add_date_prop_DT() %>% cbind(x)) %>%\n  # Filter only peaks season: Nov - Mar\n  (function(x) x[month >=11 | month <= 3]) %>%\n  # Filter Sat-Mon\n  (function(x) x[wday %in% c(6,7,1)]) %>%\n  # Filter 4 - 9 pm\n  (function(x) x[hour >= 16 ])\n\noverall <- filtered_data[,.(mean=mean(duration), median=median(duration), N=.N)]\n\n## -- GRAPH Arrival to Room LOS\nfiltered_data %>%\n  ## STAT GRAPHICS\n  ggplot(aes(x=duration, y = ..count../sum(..count..), fill=Triage.Acuity))+ #base graph with x and y specified\n  stat_bin(binwidth=bin_size, colour=\"white\", fill = \"#FDB913\")+ #layer bar graph\n  ## TITLES & AXES\n  labs( # draw labels\n    title=\"Arrival to Room\",#\"EKG Ordered to Complete\",#\"Room to Ready for Discharge\", \n    subtitle = \"1 Jan 2018 to 31 Dec 2018\",\n    y = \"Relative Frequency\",\n    x = \"Duration (mins)\"\n  )+\n  ## SCALES\n  scale_x_continuous(breaks=seq(0, upper_limit, bin_size))+ #scale x axis from 0 to 23 with intervals of 1\n  scale_y_continuous(labels=scales::percent_format(accuracy=1))+ #set y axis to percent\n  ## ANNOTATIONS\n  geom_text(data=overall, x=upper_limit-bin_size*4, y=0, vjust=-30.5, family=\"Segoe UI Light\", aes(label=paste0(\"N = \", comma(N))), inherit.aes=F)+#add N values to each facet (must include inherit.aes=F)\n  geom_vline(data=overall, color=\"#525354\", linetype=\"dashed\", aes(xintercept=mean))+#add vertical lines at each mean value\n  geom_text(data=overall, y=0, vjust=-30.5, family=\"Segoe UI Light\", aes(x=mean+4, label=paste0(\"Mean = \", round(mean, 1))), inherit.aes=F)+#add mean to each facet (must include inherit.aes=F)\n  geom_vline(data=overall, color=\"#525354\", linetype=\"dashed\", aes(xintercept=median))+#add vertical lines at each median value\n  geom_text(data=overall, y=0, vjust=-30.5, family=\"Segoe UI Light\", aes(x=median-4, label=paste0(round(median, 1), \" = Med\")), inherit.aes=F)+#add median to each facet (must include inherit.aes=F)\n  ## THEMES\n  theme_classic()+ #clean theme\n  theme(text=element_text(family=\"Segoe UI Light\"))\n\n## SAVE\nggsave(path=\"./plots\", filename=\"los_arr_rm_dist_peak.png\", height = 4.78, width = 8.75, units = \"in\", device = \"png\" )\n# ggsave(path=\"./plots\", filename=\"los_arr_rm_dist.png\", height = 4.78, width = 8.75, units = \"in\", device = \"png\" )\n\n\n## -- BY ESI\nstats <- from_to[duration < upper_limit & !(Triage.Acuity %in% c(\"\",\"1 (Resuscitation)\")), .(mean=mean(duration), median=median(duration), N=.N), by=Triage.Acuity]\n\nfrom_to[duration < upper_limit & !(Triage.Acuity %in% c(\"\",\"1 (Resuscitation)\"))] %>%\n  ## STAT GRAPHICS\n  ggplot(aes(x=duration, y = ..count../sum(..count..), fill=Triage.Acuity))+ #base graph with x and y specified\n  stat_bin(binwidth=bin_size, colour=\"white\")+#, fill = \"#FDB913\")+ #layer bar graph\n  facet_grid(Triage.Acuity~., scales=\"free_y\")+\n  ## TITLES & AXES\n  labs( # draw labels\n    title=\"Arrival to Room\",#\"Room to Ready for Discharge\", \n    subtitle = \"1 Jan 2018 to 31 Dec 2018\",\n    y = \"Relative Frequency\",\n    x = \"Duration (mins)\"\n  )+\n  ## SCALES\n  scale_x_continuous(breaks=seq(0, upper_limit, bin_size))+ #scale x axis from 0 to 23 with intervals of 1\n  scale_y_continuous(labels=scales::percent_format(accuracy=1))+ #set y axis to percent\n  scale_fill_brewer(palette=\"RdYlGn\")+ #set palette for fill\n  ## ANNOTATIONS\n  geom_text(data=stats, x=upper_limit-bin_size*4, y=0, vjust=-10, family=\"Segoe UI Light\", aes(label=paste0(\"N = \", comma(N))), inherit.aes=F)+#add N values to each facet (must include inherit.aes=F)\n  geom_vline(data=stats, color=\"#525354\", linetype=\"dashed\", aes(xintercept=mean))+#add vertical lines at each mean value\n  geom_text(data=stats, y=0, vjust=-10, family=\"Segoe UI Light\", aes(x=mean+4, label=paste0(\"Mean = \", round(mean, 1))), inherit.aes=F)+#add mean to each facet (must include inherit.aes=F)\n  geom_vline(data=stats, color=\"#525354\", linetype=\"dashed\", aes(xintercept=median))+#add vertical lines at each median value\n  geom_text(data=stats, y=0, vjust=-10, family=\"Segoe UI Light\", aes(x=median-4, label=paste0(round(median, 1), \" = Med\")), inherit.aes=F)+#add median to each facet (must include inherit.aes=F)\n  ## THEMES\n  theme_classic()+ #clean theme\n  theme(text=element_text(family=\"Segoe UI Light\"))\n\n\n## SAVE\nggsave(path=\"./plots\", filename=\"los_arr_rm_by_acuity.png\", height = 6.56, width = 8.75, units = \"in\", device = \"png\" )\n\n\n\n\n## -- ROOM TO DISCHARGE RIDGES by hour of day and day of week-- ##\n#collate descriptive stats for annotations\nupper_limit <- 240\nbin_size <- 10\n# overall <- from_to[duration < upper_limit & Triage.Acuity != \"\", .(mean=mean(duration), median=median(duration), N=.N)]\n\nridge_stats <- from_to[duration < upper_limit & Triage.Acuity != \"\"]$from_value %>%\n  add_date_prop_DT() %>%\n  cbind(from_to[duration < upper_limit & Triage.Acuity != \"\"])\n\n# rename labels so facets read day of week instead of number\nridge_stats <-  ridge_stats[wday %in% c(1,6:7)] # select only peak days\nridge_stats[,\":=\" (wday = wday %>% as.factor())]\nlevels(ridge_stats$wday)[levels(ridge_stats$wday) == \"1\"] <- \"Monday\"\nlevels(ridge_stats$wday)[levels(ridge_stats$wday) == \"6\"] <- \"Saturday\"\nlevels(ridge_stats$wday)[levels(ridge_stats$wday) == \"7\"] <- \"Sunday\"\n\nstats <- ridge_stats[, .(peak=120, mean=mean(duration)), by=wday][wday %in% c(\"Monday\", \"Saturday\", \"Sunday\")]\n\n\n## -- GRAPH \nridge_stats %>%\n  ## STAT GRAPHICS\n  ggplot(aes(x=duration, y = hour, group = hour, fill = ..x..))+#, fill=Triage.Acuity))+ #base graph with x and y specified\n  geom_density_ridges_gradient(scale=4)+\n  facet_grid(~wday)+\n  # stat_bin(binwidth=bin_size, colour=\"white\", fill = \"#FDB913\")+ #layer bar graph\n  ## TITLES & AXES\n  labs( # draw labels\n    title=\"Room to Discharge by Hour and by Peak Day\",#\"EKG Ordered to Complete\",#\"Room to Ready for Discharge\", \n    subtitle = \"1 Jan 2018 to 31 Dec 2018\",\n    y = \"Hour of Day\",\n    x = \"Duration (mins)\"\n  )+\n  ## SCALES\n  scale_x_continuous(breaks=seq(0, upper_limit, bin_size*2))+ #scale x axis from 0 to 23 with intervals of 1\n  scale_y_continuous(breaks=seq(0, 24,1))+ #set y axis to percent\n  scale_fill_viridis_c(name=\"Duration (mins)\", option = \"C\")+\n  ## ANNOTATIONS\n  geom_vline(data=stats, color=\"red\", linetype=\"dashed\", aes(xintercept=peak))+#add vertical lines at 12 visits per hour\n  geom_vline(data=stats, color=\"#525354\", linetype=\"dashed\", aes(xintercept=mean))+#add vertical lines at each mean value\n  geom_text(data=stats, y=26.2, vjust=0, family=\"Segoe UI Light\", aes(x=mean-2.2, label=paste0(\"Mean = \", round(mean, 1))), inherit.aes=F)+#add mean to each facet (must include inherit.aes=F)\n  ## THEMES\n  theme_classic()+ #clean theme\n  theme(text=element_text(family=\"Segoe UI Light\"))\n\n## SAVE\nggsave(path=\"./plots\", filename=\"los_rm_disch_ridge_by_dow.png\", height = 6.56, width = 12.75, units = \"in\", device = \"png\" )\n\n\n\n\n\n## -- RADIOLOGY TURN AROUND by hour of day and day of week-- ##\n#collate descriptive stats for annotations\nupper_limit <- 150\nbin_size <- 10\n# overall <- from_to[duration < upper_limit & Triage.Acuity != \"\", .(mean=mean(duration), median=median(duration), N=.N)]\n\nridge_stats <- from_to[duration < upper_limit & Triage.Acuity != \"\"]$from_value %>%\n  add_date_prop_DT() %>%\n  cbind(from_to[duration < upper_limit & Triage.Acuity != \"\"])\n\n# rename labels so facets read day of week instead of number\n# ridge_stats <-  ridge_stats[wday %in% c(1,6:7)] # select only peak days\nridge_stats[,\":=\" (wday = wday %>% as.factor())]\nlevels(ridge_stats$wday)[levels(ridge_stats$wday) == \"1\"] <- \"Monday\"\nlevels(ridge_stats$wday)[levels(ridge_stats$wday) == \"2\"] <- \"Tuesday\"\nlevels(ridge_stats$wday)[levels(ridge_stats$wday) == \"3\"] <- \"Wednesday\"\nlevels(ridge_stats$wday)[levels(ridge_stats$wday) == \"4\"] <- \"Thursday\"\nlevels(ridge_stats$wday)[levels(ridge_stats$wday) == \"5\"] <- \"Friday\"\nlevels(ridge_stats$wday)[levels(ridge_stats$wday) == \"6\"] <- \"Saturday\"\nlevels(ridge_stats$wday)[levels(ridge_stats$wday) == \"7\"] <- \"Sunday\"\n\nstats <- ridge_stats[, .(peak=80, mean=mean(duration)), by=wday]\n\n\n## -- GRAPH \nridge_stats %>%\n  ## STAT GRAPHICS\n  ggplot(aes(x=duration, y = hour, group = hour, fill = ..x..))+#, fill=Triage.Acuity))+ #base graph with x and y specified\n  geom_density_ridges_gradient(scale=4)+\n  facet_grid(~wday)+\n  # stat_bin(binwidth=bin_size, colour=\"white\", fill = \"#FDB913\")+ #layer bar graph\n  ## TITLES & AXES\n  labs( # draw labels\n    title=\"Radiology Ordered to Complete by Hour and by Peak Day\",#\"EKG Ordered to Complete\",#\"Room to Ready for Discharge\", \n    subtitle = \"1 Jan 2018 to 31 Dec 2018\",\n    y = \"Hour of Day\",\n    x = \"Duration (mins)\"\n  )+\n  ## SCALES\n  scale_x_continuous(breaks=seq(0, upper_limit, bin_size*2))+ #scale x axis from 0 to 23 with intervals of 1\n  scale_y_continuous(breaks=seq(0, 24,1))+ #set y axis to percent\n  scale_fill_viridis_c(name=\"Duration (mins)\", option = \"C\")+\n  ## ANNOTATIONS\n  geom_vline(data=stats, color=\"red\", linetype=\"dashed\", aes(xintercept=peak))+#add vertical lines at 12 visits per hour\n  geom_vline(data=stats, color=\"#525354\", linetype=\"dashed\", aes(xintercept=mean))+#add vertical lines at each mean value\n  geom_text(data=stats, y=26.2, vjust=0, family=\"Segoe UI Light\", aes(x=mean+4, label=paste0(\"Mean = \", round(mean, 1))), inherit.aes=F)+#add mean to each facet (must include inherit.aes=F)\n  ## THEMES\n  theme_classic()+ #clean theme\n  theme(text=element_text(family=\"Segoe UI Light\"))\n\n## SAVE\nggsave(path=\"./plots\", filename=\"los_rad_turn_ridge_by_dow.png\", height = 6.56, width = 12.75, units = \"in\", device = \"png\" )\n\n\n\n\n\n#collate descriptive stats for annotations\nupper_limit <- 240\nbin_size <- 10\n\n# filter out erroneous arrows\npatterns_to_exclude <- c(\n  \"Ready.for.Discharge --> Waiting.for.UC\"\n) %>%\n  # applies OR to each pattern in the list, returns the T/F filter of records to exclude\n  reduce(function(acc,nxt){\n    acc|grepl(nxt, from_to$from_to)\n  }, .init=rep(F, from_to[,.N]))\n\n\noverall <- from_to[duration < upper_limit & Triage.Acuity != \"\" & !(patterns_to_exclude), .(mean=mean(duration), median=median(duration), N=.N)]\n\n\n## -- LOS WAITING TO DISCHARGE\nfrom_to[duration < upper_limit & Triage.Acuity != \"\" & !(patterns_to_exclude)] %>%\n  ## STAT GRAPHICS\n  ggplot(aes(x=duration, y = ..count../sum(..count..), fill=Triage.Acuity))+ #base graph with x and y specified\n  stat_bin(binwidth=bin_size, colour=\"white\", fill = \"#FDB913\")+ #layer bar graph\n  ## TITLES & AXES\n  labs( # draw labels\n    title=\"Waiting to Discharge\",#\"EKG Ordered to Complete\",#\"Room to Ready for Discharge\", \n    subtitle = \"1 Jan 2018 to 31 Dec 2018\",\n    y = \"Relative Frequency\",\n    x = \"Duration (mins)\"\n  )+\n  ## SCALES\n  scale_x_continuous(breaks=seq(0, upper_limit, bin_size))+ #scale x axis from 0 to 23 with intervals of 1\n  scale_y_continuous(labels=scales::percent_format(accuracy=1))+ #set y axis to percent\n  ## ANNOTATIONS\n  geom_text(data=overall, x=upper_limit-bin_size*3, y=0, vjust=-30.5, family=\"Segoe UI Light\", aes(label=paste0(\"N = \", N %>% comma())), inherit.aes=F)+#add N values to each facet (must include inherit.aes=F)\n  geom_vline(data=overall, color=\"#525354\", linetype=\"dashed\", aes(xintercept=mean))+#add vertical lines at each mean value\n  geom_text(data=overall, y=0, vjust=-30.5, family=\"Segoe UI Light\", aes(x=mean+bin_size*2, label=paste0(\"Mean = \", round(mean, 1))), inherit.aes=F)+#add mean to each facet (must include inherit.aes=F)\n  geom_vline(data=overall, color=\"#525354\", linetype=\"dashed\", aes(xintercept=median))+#add vertical lines at each median value\n  geom_text(data=overall, y=0, vjust=-30.5, family=\"Segoe UI Light\", aes(x=median-bin_size*2, label=paste0(round(median, 1), \" = Med\")), inherit.aes=F)+#add median to each facet (must include inherit.aes=F)\n  ## THEMES\n  theme_classic()+ #clean theme\n  theme(text=element_text(family=\"Segoe UI Light\"))\n\n## SAVE\nggsave(path=\"./plots\", filename=\"los_wait_disch_dist.png\", height = 4.78, width = 8.75, units = \"in\", device = \"png\" )\n\n\n\n\n\n#collate descriptive stats for annotations\nupper_limit <- 100\nbin_size <- 5\n\n# filter out erroneous arrows\npatterns_to_exclude <- c(\n  \"Waiting.for.UC --> Rooming.Date...Time\"\n) %>%\n  # applies OR to each pattern in the list, returns the T/F filter of records to exclude\n  reduce(function(acc,nxt){\n    acc|grepl(nxt, from_to$from_to)\n  }, .init=rep(F, from_to[,.N]))\n\n\noverall <- from_to[duration < upper_limit & Triage.Acuity != \"\" & !(patterns_to_exclude), .(mean=mean(duration), median=median(duration), N=.N)]\n\n\n## -- LOS ROOM TO WAITING\nfrom_to[duration < upper_limit & Triage.Acuity != \"\" & !(patterns_to_exclude)] %>%\n  ## STAT GRAPHICS\n  ggplot(aes(x=duration, y = ..count../sum(..count..), fill=Triage.Acuity))+ #base graph with x and y specified\n  stat_bin(binwidth=bin_size, colour=\"white\", fill = \"#FDB913\")+ #layer bar graph\n  ## TITLES & AXES\n  labs( # draw labels\n    title=\"Room to Waiting\",#\"EKG Ordered to Complete\",#\"Room to Ready for Discharge\", \n    subtitle = \"1 Jan 2018 to 31 Dec 2018\",\n    y = \"Relative Frequency\",\n    x = \"Duration (mins)\"\n  )+\n  ## SCALES\n  scale_x_continuous(breaks=seq(0, upper_limit, bin_size))+ #scale x axis from 0 to 23 with intervals of 1\n  scale_y_continuous(labels=scales::percent_format(accuracy=1))+ #set y axis to percent\n  ## ANNOTATIONS\n  geom_text(data=overall, x=upper_limit-bin_size*4, y=0, vjust=-30.5, family=\"Segoe UI Light\", aes(label=paste0(\"N = \", N %>% comma())), inherit.aes=F)+#add N values to each facet (must include inherit.aes=F)\n  geom_vline(data=overall, color=\"#525354\", linetype=\"dashed\", aes(xintercept=mean))+#add vertical lines at each mean value\n  geom_text(data=overall, y=0, vjust=-30.5, family=\"Segoe UI Light\", aes(x=mean+10, label=paste0(\"Mean = \", round(mean, 1))), inherit.aes=F)+#add mean to each facet (must include inherit.aes=F)\n  geom_vline(data=overall, color=\"#525354\", linetype=\"dashed\", aes(xintercept=median))+#add vertical lines at each median value\n  geom_text(data=overall, y=0, vjust=-30.5, family=\"Segoe UI Light\", aes(x=median-10, label=paste0(round(median, 1), \" = Med\")), inherit.aes=F)+#add median to each facet (must include inherit.aes=F)\n  ## THEMES\n  theme_classic()+ #clean theme\n  theme(text=element_text(family=\"Segoe UI Light\"))\n\n## SAVE\nggsave(path=\"./plots\", filename=\"los_rm_wait_dist.png\", height = 4.78, width = 8.75, units = \"in\", device = \"png\" )\n\n\n\n\n\n\n## -- WAITING TO DISCHARGE by hour of day and day of week-- ##\n#collate descriptive stats for annotations\nupper_limit <- 240\nbin_size <- 10\n# overall <- from_to[duration < upper_limit & Triage.Acuity != \"\", .(mean=mean(duration), median=median(duration), N=.N)]\n\n# filter out erroneous arrows\npatterns_to_exclude <- c(\n  \"Ready.for.Discharge --> Waiting.for.UC\"\n) %>%\n  # applies OR to each pattern in the list, returns the T/F filter of records to exclude\n  reduce(function(acc,nxt){\n    acc|grepl(nxt, from_to$from_to)\n  }, .init=rep(F, from_to[,.N]))\n\nridge_stats <- from_to[duration < upper_limit & Triage.Acuity != \"\" & !(patterns_to_exclude)]$from_value %>%\n  add_date_prop_DT() %>%\n  cbind(from_to[duration < upper_limit & Triage.Acuity != \"\" & !(patterns_to_exclude)])\n\n# rename labels so facets read day of week instead of number\n# ridge_stats <-  ridge_stats[wday %in% c(1,6:7)] # select only peak days\nridge_stats[,\":=\" (wday = wday %>% as.factor())]\nlevels(ridge_stats$wday)[levels(ridge_stats$wday) == \"1\"] <- \"Monday\"\nlevels(ridge_stats$wday)[levels(ridge_stats$wday) == \"2\"] <- \"Tuesday\"\nlevels(ridge_stats$wday)[levels(ridge_stats$wday) == \"3\"] <- \"Wednesday\"\nlevels(ridge_stats$wday)[levels(ridge_stats$wday) == \"4\"] <- \"Thursday\"\nlevels(ridge_stats$wday)[levels(ridge_stats$wday) == \"5\"] <- \"Friday\"\nlevels(ridge_stats$wday)[levels(ridge_stats$wday) == \"6\"] <- \"Saturday\"\nlevels(ridge_stats$wday)[levels(ridge_stats$wday) == \"7\"] <- \"Sunday\"\n\nstats <- ridge_stats[, .(peak=120, mean=mean(duration)), by=wday]\n\n\n## -- GRAPH \nridge_stats %>%\n  ## STAT GRAPHICS\n  ggplot(aes(x=duration, y = hour, group = hour, fill = ..x..))+#, fill=Triage.Acuity))+ #base graph with x and y specified\n  geom_density_ridges_gradient(scale=4)+\n  facet_grid(~wday)+\n  # stat_bin(binwidth=bin_size, colour=\"white\", fill = \"#FDB913\")+ #layer bar graph\n  ## TITLES & AXES\n  labs( # draw labels\n    title=\"Waiting to Discharge by Hour and by Peak Day\",#\"EKG Ordered to Complete\",#\"Room to Ready for Discharge\", \n    subtitle = \"1 Jan 2018 to 31 Dec 2018\",\n    y = \"Hour of Day\",\n    x = \"Duration (mins)\"\n  )+\n  ## SCALES\n  scale_x_continuous(breaks=seq(0, upper_limit, bin_size*4))+ #scale x axis from 0 to 23 with intervals of 1\n  scale_y_continuous(breaks=seq(0, 24,1))+ #set y axis to percent\n  scale_fill_viridis_c(name=\"Duration (mins)\", option = \"C\")+\n  ## ANNOTATIONS\n  geom_vline(data=stats, color=\"red\", linetype=\"dashed\", aes(xintercept=peak))+#add vertical lines at 12 visits per hour\n  geom_vline(data=stats, color=\"#525354\", linetype=\"dashed\", aes(xintercept=mean))+#add vertical lines at each mean value\n  geom_text(data=stats, y=26.2, vjust=0, family=\"Segoe UI Light\", aes(x=mean+4, label=paste0(\"Mean = \", round(mean, 1))), inherit.aes=F)+#add mean to each facet (must include inherit.aes=F)\n  ## THEMES\n  theme_classic()+ #clean theme\n  theme(text=element_text(family=\"Segoe UI Light\"))\n\n## SAVE\nggsave(path=\"./plots\", filename=\"los_wait_disch_ridge_by_dow.png\", height = 6.56, width = 12.75, units = \"in\", device = \"png\" )\n",
    "created" : 1582318280070.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "833397377",
    "id" : "2BA16D97",
    "lastKnownWriteTime" : 1582065391,
    "last_content_update" : 1582065391,
    "path" : "//milwaukee/project/MASTERS/Data Science/+Sean Bergstedt Local Drive/R/Workspace/2019-10 EPPA/vis_los.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}